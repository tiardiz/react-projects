{"ast":null,"code":"var _jsxFileName = \"/Users/ardaktleules/react-projects/random-quotes-machine/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport Quotes from \"./components/Quotes\";\nimport Actions from \"./components/Actions\";\nimport quotesData from \"./data/quotes.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colors = [\"#16a085\", \"#27ae60\", \"#2c3e50\", \"#f39c12\", \"#e74c3c\", \"#9b59b6\", \"#FB6964\", \"#342224\", \"#472E32\", \"#BDBB99\", \"#77B1A9\", \"#73A857\"];\n\nfunction generateRandom() {\n  const randomArrayIndex = Math.floor(Math.random() * quotesData.quotes.length);\n  const randomIndexColor = Math.floor(Math.random() * colors.length);\n  const quote = {\n    quote: quotesData.quotes[randomArrayIndex].quote,\n    author: quotesData.quotes[randomArrayIndex].author,\n    color: colors[randomIndexColor]\n  };\n  return quote;\n}\n\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      quote: generateRandom()\n    };\n\n    this.handleGenerateQuote = () => {\n      this.setState({\n        quote: generateRandom()\n      });\n    };\n  }\n\n  render() {\n    const {\n      quote\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: quote.color\n      },\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quotes-container\",\n        children: [/*#__PURE__*/_jsxDEV(Quotes, {\n          quote: quote.quote,\n          author: quote.author,\n          color: quote.color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Actions, {\n          handleGenerateQuote: this.handleGenerateQuote,\n          color: quote.color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Quotes","Actions","quotesData","colors","generateRandom","randomArrayIndex","Math","floor","random","quotes","length","randomIndexColor","quote","author","color","App","Component","state","handleGenerateQuote","setState","render","backgroundColor"],"sources":["/Users/ardaktleules/react-projects/random-quotes-machine/src/App.js"],"sourcesContent":["import React from \"react\";\n\nimport \"./App.css\";\n\nimport Quotes from \"./components/Quotes\";\nimport Actions from \"./components/Actions\";\n\nimport quotesData from \"./data/quotes.json\";\n\nconst colors = [\n  \"#16a085\",\n  \"#27ae60\",\n  \"#2c3e50\",\n  \"#f39c12\",\n  \"#e74c3c\",\n  \"#9b59b6\",\n  \"#FB6964\",\n  \"#342224\",\n  \"#472E32\",\n  \"#BDBB99\",\n  \"#77B1A9\",\n  \"#73A857\",\n];\n\nfunction generateRandom() {\n  const randomArrayIndex = Math.floor(Math.random() * quotesData.quotes.length);\n  const randomIndexColor = Math.floor(Math.random() * colors.length);\n\n  const quote = {\n    quote: quotesData.quotes[randomArrayIndex].quote,\n    author: quotesData.quotes[randomArrayIndex].author,\n    color: colors[randomIndexColor],\n  };\n\n  return quote;\n}\nclass App extends React.Component {\n  state = {\n    quote: generateRandom(),\n  };\n\n  handleGenerateQuote = () => {\n    this.setState({ quote: generateRandom() });\n  };\n\n  render() {\n    const { quote } = this.state;\n\n    return (\n      <div\n        style={{\n          backgroundColor: quote.color,\n        }}\n        className=\"App\"\n      >\n        <div className=\"quotes-container\">\n          <Quotes\n            quote={quote.quote}\n            author={quote.author}\n            color={quote.color}\n          />\n          <hr />\n          <Actions\n            handleGenerateQuote={this.handleGenerateQuote}\n            color={quote.color}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,WAAP;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,OAAOC,UAAP,MAAuB,oBAAvB;;AAEA,MAAMC,MAAM,GAAG,CACb,SADa,EAEb,SAFa,EAGb,SAHa,EAIb,SAJa,EAKb,SALa,EAMb,SANa,EAOb,SAPa,EAQb,SARa,EASb,SATa,EAUb,SAVa,EAWb,SAXa,EAYb,SAZa,CAAf;;AAeA,SAASC,cAAT,GAA0B;EACxB,MAAMC,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,UAAU,CAACO,MAAX,CAAkBC,MAA7C,CAAzB;EACA,MAAMC,gBAAgB,GAAGL,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,MAAM,CAACO,MAAlC,CAAzB;EAEA,MAAME,KAAK,GAAG;IACZA,KAAK,EAAEV,UAAU,CAACO,MAAX,CAAkBJ,gBAAlB,EAAoCO,KAD/B;IAEZC,MAAM,EAAEX,UAAU,CAACO,MAAX,CAAkBJ,gBAAlB,EAAoCQ,MAFhC;IAGZC,KAAK,EAAEX,MAAM,CAACQ,gBAAD;EAHD,CAAd;EAMA,OAAOC,KAAP;AACD;;AACD,MAAMG,GAAN,SAAkBhB,KAAK,CAACiB,SAAxB,CAAkC;EAAA;IAAA;IAAA,KAChCC,KADgC,GACxB;MACNL,KAAK,EAAER,cAAc;IADf,CADwB;;IAAA,KAKhCc,mBALgC,GAKV,MAAM;MAC1B,KAAKC,QAAL,CAAc;QAAEP,KAAK,EAAER,cAAc;MAAvB,CAAd;IACD,CAP+B;EAAA;;EAShCgB,MAAM,GAAG;IACP,MAAM;MAAER;IAAF,IAAY,KAAKK,KAAvB;IAEA,oBACE;MACE,KAAK,EAAE;QACLI,eAAe,EAAET,KAAK,CAACE;MADlB,CADT;MAIE,SAAS,EAAC,KAJZ;MAAA,uBAME;QAAK,SAAS,EAAC,kBAAf;QAAA,wBACE,QAAC,MAAD;UACE,KAAK,EAAEF,KAAK,CAACA,KADf;UAEE,MAAM,EAAEA,KAAK,CAACC,MAFhB;UAGE,KAAK,EAAED,KAAK,CAACE;QAHf;UAAA;UAAA;UAAA;QAAA,QADF,eAME;UAAA;UAAA;UAAA;QAAA,QANF,eAOE,QAAC,OAAD;UACE,mBAAmB,EAAE,KAAKI,mBAD5B;UAEE,KAAK,EAAEN,KAAK,CAACE;QAFf;UAAA;UAAA;UAAA;QAAA,QAPF;MAAA;QAAA;QAAA;QAAA;MAAA;IANF;MAAA;MAAA;MAAA;IAAA,QADF;EAqBD;;AAjC+B;;AAoClC,eAAeC,GAAf"},"metadata":{},"sourceType":"module"}